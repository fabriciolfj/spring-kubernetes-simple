apiVersion: apps/v1
kind: Deployment
metadata:
  name: products
spec:
  replicas: 1
  selector:
    matchLabels:
      app: products
  template:
    metadata:
      labels:
        app: products
    spec:
      containers:
        - name: products
          image: 333000609522.dkr.ecr.us-east-1.amazonaws.com/fabricio211/product:9.0.1
          imagePullPolicy: Always
          env:
            - name: SPRING_CONFIG_LOCATION
              value: file:/etc/config/application.yml
          ports:
            - containerPort: 8080
          resources:
            limits:
              memory: 400Mi
              cpu: "400m"
            requests:
              memory: 400Mi
              cpu: "400m"
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /actuator/info
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 40
            timeoutSeconds: 2
            failureThreshold: 30
            successThreshold: 1
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
            successThreshold: 1
          volumeMounts:
            - mountPath: /etc/config
              name: config-products
      volumes:
        - name: config-products
          configMap:
            name: config-product
            items:
              - key: application.yml
                path: application.yml
---
apiVersion: v1
kind: Service
metadata:
  name: products
spec:
  type: NodePort
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    app: products

---
#n√£o usar, vamos usar o secret
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-product
data:
  application.yml: |-
    spring:
      application:
        name: product
      flyway:
        locations:
          - classpath:db/migration
          - classpath:db/testdata
      jpa:
        show-sql: true
      management:
      endpoints:
        web:
          exposure:
            include: "*"
      metrics:
        export:
          prometheus:
            enabled: true
      endpoint:
        metrics:
          enabled: false
        prometheus:
          enabled: true
